/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.agm.view;
import com.agm.model.paintingInfo;
import com.amg.util.validationUtil;
import java.awt.Color;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Dell
 */
public class AGM extends javax.swing.JFrame {
    private List<paintingInfo> artItemList;
    private java.awt.CardLayout cardLayout;
    private final validationUtil validationUtil;
    private final Color errorColor = new Color(255, 51, 0);
    private final Color yellowColor = new Color(239, 192, 32);
    private final Color greenColor = new Color(35, 101, 51);

    /**
     * Creates new form AGM
     */
    public AGM() {
        initComponents();
        validationUtil = new validationUtil();
        initializeLayout(); // Set up CardLayout and add screens
        initializeData(); // Initialize student data and table
        startProgress(); 
        // Set up CardLayout and add screens
       // initializeData(); // Initialize student data and table
        //startProgress();
    }
     private void initializeData() {
        artItemList = new LinkedList<>();

        // Registering sample students
        registerStudent(new paintingInfo(11, "Starry night", "27/01/2024", "Watercolor", "9841489349", 53, "narnia","Paper", "100 X 100"));
        registerStudent(new paintingInfo(11, "Starry night", "27/01/2024", "Watercolor", "9841489349", 53, "narnia","Paper", "100 X 100"));
    }
    private void registerStudent(paintingInfo items) {
        artItemList.add(items);
        DefaultTableModel model = (DefaultTableModel) mntable.getModel();
        model.addRow(new Object[]{
            items.getArtId(), items.getName(), items.getAddress(), items.getContact(), items.getDate(), items.getFormatt()
                ,items.getPrice(), items.getMedium(),items.getSize()
        });
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loginPanel = new javax.swing.JPanel();
        lgusernametxt = new javax.swing.JTextField();
        lgUsername = new javax.swing.JLabel();
        lgPassword = new javax.swing.JLabel();
        lgUsernamError = new javax.swing.JLabel();
        lgPasswordError = new javax.swing.JLabel();
        lgpasswordtxt = new javax.swing.JPasswordField();
        lgbutton = new javax.swing.JButton();
        lgImg = new javax.swing.JLabel();
        mnPanel = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        mnaadmin = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        mnAboutus = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        mnGallery = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mntable = new javax.swing.JTable();
        mnFormattxt = new javax.swing.JComboBox<>();
        mnDatetxt = new javax.swing.JTextField();
        mnNametxt = new javax.swing.JTextField();
        mnStudioAddresstxt = new javax.swing.JTextField();
        mnPricetxt = new javax.swing.JTextField();
        mnSizetxt = new javax.swing.JTextField();
        mnMeduimtxt = new javax.swing.JComboBox<>();
        clear = new javax.swing.JButton();
        mnAddButton = new javax.swing.JButton();
        mnIDtxt = new javax.swing.JTextField();
        mnDeleteButton = new javax.swing.JButton();
        mnUpdateButton = new javax.swing.JButton();
        mnContacttxt = new javax.swing.JTextField();
        contactError = new javax.swing.JLabel();
        dateError = new javax.swing.JLabel();
        nameError = new javax.swing.JLabel();
        idError = new javax.swing.JLabel();
        addressError = new javax.swing.JLabel();
        priceError = new javax.swing.JLabel();
        sizeError = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        mnHome = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        mnLogoutButton = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        pnLoaddingscreen = new javax.swing.JPanel();
        scLoaddingscreen = new javax.swing.JProgressBar();
        imgLS = new javax.swing.JLabel();

        loginPanel.setMaximumSize(new java.awt.Dimension(1000, 600));
        loginPanel.setMinimumSize(new java.awt.Dimension(1000, 600));
        loginPanel.setPreferredSize(new java.awt.Dimension(1000, 600));
        loginPanel.setLayout(null);

        lgusernametxt.setBackground(java.awt.SystemColor.controlHighlight);
        lgusernametxt.setText("p");
        lgusernametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lgusernametxtActionPerformed(evt);
            }
        });
        loginPanel.add(lgusernametxt);
        lgusernametxt.setBounds(690, 310, 240, 30);

        lgUsername.setText("username");
        loginPanel.add(lgUsername);
        lgUsername.setBounds(557, 320, 80, 16);

        lgPassword.setText("password");
        loginPanel.add(lgPassword);
        lgPassword.setBounds(560, 390, 90, 16);
        loginPanel.add(lgUsernamError);
        lgUsernamError.setBounds(690, 350, 240, 20);
        loginPanel.add(lgPasswordError);
        lgPasswordError.setBounds(680, 420, 220, 20);

        lgpasswordtxt.setBackground(java.awt.SystemColor.controlHighlight);
        lgpasswordtxt.setText("z");
        lgpasswordtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lgpasswordtxtActionPerformed(evt);
            }
        });
        loginPanel.add(lgpasswordtxt);
        lgpasswordtxt.setBounds(690, 380, 240, 30);

        lgbutton.setText("login");
        lgbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lgbuttonActionPerformed(evt);
            }
        });
        loginPanel.add(lgbutton);
        lgbutton.setBounds(730, 450, 140, 50);

        lgImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/agm/resources/Frame 1 (3).png"))); // NOI18N
        lgImg.setText("jLabel1");
        lgImg.setMaximumSize(new java.awt.Dimension(1000, 600));
        lgImg.setMinimumSize(new java.awt.Dimension(1000, 600));
        lgImg.setPreferredSize(new java.awt.Dimension(1000, 600));
        loginPanel.add(lgImg);
        lgImg.setBounds(0, 0, 1000, 600);

        mnPanel.setBackground(new java.awt.Color(255, 255, 204));
        mnPanel.setMaximumSize(new java.awt.Dimension(1000, 600));
        mnPanel.setMinimumSize(new java.awt.Dimension(1000, 600));
        mnPanel.setPreferredSize(new java.awt.Dimension(1000, 600));
        mnPanel.setLayout(null);

        jTabbedPane2.setDoubleBuffered(true);
        jTabbedPane2.setMaximumSize(new java.awt.Dimension(1000, 600));
        jTabbedPane2.setMinimumSize(new java.awt.Dimension(1000, 600));
        jTabbedPane2.setPreferredSize(new java.awt.Dimension(1000, 600));

        mnaadmin.setBackground(new java.awt.Color(204, 204, 255));
        mnaadmin.setMaximumSize(new java.awt.Dimension(1000, 800));
        mnaadmin.setMinimumSize(new java.awt.Dimension(1000, 800));
        mnaadmin.setPreferredSize(new java.awt.Dimension(1000, 800));
        mnaadmin.setLayout(null);

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(null);
        mnaadmin.add(jPanel1);
        jPanel1.setBounds(20, 10, 700, 480);

        jTabbedPane2.addTab("admin", mnaadmin);

        mnAboutus.setFocusTraversalPolicyProvider(true);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("Mandala art gallery is located in the heart of kathmandu and is old of the oldest art gallery to be \nestablished in Nepal. ");
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout mnAboutusLayout = new javax.swing.GroupLayout(mnAboutus);
        mnAboutus.setLayout(mnAboutusLayout);
        mnAboutusLayout.setHorizontalGroup(
            mnAboutusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mnAboutusLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 538, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(418, Short.MAX_VALUE))
        );
        mnAboutusLayout.setVerticalGroup(
            mnAboutusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mnAboutusLayout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(110, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("about us", mnAboutus);

        mnGallery.setBackground(new java.awt.Color(239, 239, 235));
        mnGallery.setEnabled(false);
        mnGallery.setMaximumSize(new java.awt.Dimension(1000, 700));
        mnGallery.setMinimumSize(new java.awt.Dimension(1000, 700));
        mnGallery.setPreferredSize(new java.awt.Dimension(1000, 700));

        mntable.setBackground(new java.awt.Color(54, 54, 51));
        mntable.setForeground(new java.awt.Color(254, 190, 251));
        mntable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ArtID", "Artist Name", "Date", "Meduim", "Contact", "Price", "Studio Address", "Format ", "Size"
            }
        ));
        jScrollPane1.setViewportView(mntable);

        mnFormattxt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Paper", "Cloth", "Glass" }));
        mnFormattxt.setBorder(null);
        mnFormattxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnFormattxtActionPerformed(evt);
            }
        });

        mnDatetxt.setText("dd/mm/yyyy");
        mnDatetxt.setBorder(null);
        mnDatetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnDatetxtActionPerformed(evt);
            }
        });

        mnNametxt.setBorder(null);
        mnNametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnNametxtActionPerformed(evt);
            }
        });

        mnStudioAddresstxt.setBorder(null);
        mnStudioAddresstxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnStudioAddresstxtActionPerformed(evt);
            }
        });

        mnPricetxt.setBorder(null);
        mnPricetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnPricetxtActionPerformed(evt);
            }
        });

        mnSizetxt.setBorder(null);
        mnSizetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnSizetxtActionPerformed(evt);
            }
        });

        mnMeduimtxt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Acrylic", "Watercolor", "Oil", "Charcoal" }));
        mnMeduimtxt.setToolTipText("");
        mnMeduimtxt.setBorder(null);
        mnMeduimtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnMeduimtxtActionPerformed(evt);
            }
        });

        clear.setText("clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        mnAddButton.setText("Add");
        mnAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnAddButtonActionPerformed(evt);
            }
        });

        mnIDtxt.setBorder(null);
        mnIDtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnIDtxtActionPerformed(evt);
            }
        });

        mnDeleteButton.setText("delete");
        mnDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnDeleteButtonActionPerformed(evt);
            }
        });

        mnUpdateButton.setText("Update");
        mnUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnUpdateButtonActionPerformed(evt);
            }
        });

        mnContacttxt.setText("98");
        mnContacttxt.setBorder(null);
        mnContacttxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnContacttxtActionPerformed(evt);
            }
        });

        jLabel1.setText("ID");

        jLabel3.setText("Price");

        jLabel4.setText("Contact");

        jLabel5.setText("type");

        jLabel6.setText("Date");

        jLabel7.setText("Address");

        jLabel8.setText("Size");

        jLabel9.setText("Meduim");

        jLabel10.setText("Name");

        javax.swing.GroupLayout mnGalleryLayout = new javax.swing.GroupLayout(mnGallery);
        mnGallery.setLayout(mnGalleryLayout);
        mnGalleryLayout.setHorizontalGroup(
            mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mnGalleryLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(mnGalleryLayout.createSequentialGroup()
                            .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(mnGalleryLayout.createSequentialGroup()
                                    .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(mnGalleryLayout.createSequentialGroup()
                                            .addGap(25, 25, 25)
                                            .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel9)
                                                    .addComponent(idError, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel5)
                                                    .addComponent(mnFormattxt, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGroup(mnGalleryLayout.createSequentialGroup()
                                            .addGap(18, 18, 18)
                                            .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(mnIDtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel1)
                                                .addComponent(mnMeduimtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(mnGalleryLayout.createSequentialGroup()
                                            .addGap(1, 1, 1)
                                            .addComponent(mnNametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(mnGalleryLayout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(mnSizetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(nameError, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel8)
                                                .addComponent(sizeError, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGroup(mnGalleryLayout.createSequentialGroup()
                                    .addGap(220, 220, 220)
                                    .addComponent(jLabel10)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mnGalleryLayout.createSequentialGroup()
                                    .addGap(303, 303, 303)
                                    .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(dateError, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(mnDatetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel6)
                                        .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(contactError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(mnGalleryLayout.createSequentialGroup()
                                                .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel4)
                                                    .addComponent(mnContacttxt, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGap(301, 301, 301))
                                .addGroup(mnGalleryLayout.createSequentialGroup()
                                    .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(mnAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(351, 351, 351))))
                        .addGroup(mnGalleryLayout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 891, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(281, 281, 281)))
                    .addGroup(mnGalleryLayout.createSequentialGroup()
                        .addComponent(mnUpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(mnDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(669, 669, 669))))
            .addGroup(mnGalleryLayout.createSequentialGroup()
                .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(mnGalleryLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(priceError, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mnGalleryLayout.createSequentialGroup()
                        .addGap(491, 491, 491)
                        .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(mnPricetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(mnStudioAddresstxt, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addressError, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mnGalleryLayout.setVerticalGroup(
            mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mnGalleryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mnGalleryLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mnContacttxt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mnPricetxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mnGalleryLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(idError, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(mnGalleryLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(priceError, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(mnGalleryLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(contactError, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(mnGalleryLayout.createSequentialGroup()
                        .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel10)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mnIDtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mnNametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameError, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mnGalleryLayout.createSequentialGroup()
                        .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mnGalleryLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(mnGalleryLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mnMeduimtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mnSizetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mnGalleryLayout.createSequentialGroup()
                                .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(dateError, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(1, 1, 1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mnGalleryLayout.createSequentialGroup()
                                .addComponent(sizeError, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))))
                    .addGroup(mnGalleryLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mnGalleryLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mnDatetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mnStudioAddresstxt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mnGalleryLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addressError, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))))
                .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mnFormattxt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(mnAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mnGalleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(mnDeleteButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                        .addComponent(mnUpdateButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(186, 186, 186))
        );

        jTabbedPane2.addTab("items list", mnGallery);

        mnHome.setBackground(new java.awt.Color(239, 239, 235));
        mnHome.setMaximumSize(new java.awt.Dimension(1000, 500));
        mnHome.setMinimumSize(new java.awt.Dimension(1000, 500));
        mnHome.setPreferredSize(new java.awt.Dimension(1000, 500));
        mnHome.setLayout(null);
        mnHome.add(jScrollPane4);
        jScrollPane4.setBounds(980, 0, 20, 340);

        mnLogoutButton.setBackground(new java.awt.Color(255, 0, 0));
        mnLogoutButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        mnLogoutButton.setForeground(new java.awt.Color(255, 255, 255));
        mnLogoutButton.setText("back");
        mnLogoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnLogoutButtonActionPerformed(evt);
            }
        });
        mnHome.add(mnLogoutButton);
        mnLogoutButton.setBounds(860, 520, 118, 30);

        jLabel15.setBackground(new java.awt.Color(255, 246, 246));
        jLabel15.setFont(new java.awt.Font("Sitka Banner", 0, 48)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 246, 246));
        jLabel15.setText("Welcome");
        mnHome.add(jLabel15);
        jLabel15.setBounds(700, 240, 180, 70);

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/agm/resources/txt.png"))); // NOI18N
        mnHome.add(jLabel12);
        jLabel12.setBounds(20, 380, 818, 130);

        jLabel16.setBackground(new java.awt.Color(255, 246, 246));
        jLabel16.setFont(new java.awt.Font("Sitka Banner", 0, 48)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 246, 246));
        jLabel16.setText("Maldala Art Point Admin Panel");
        mnHome.add(jLabel16);
        jLabel16.setBounds(360, 290, 870, 70);

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/agm/resources/image (1).png"))); // NOI18N
        jLabel13.setText("jLabel13");
        mnHome.add(jLabel13);
        jLabel13.setBounds(0, 0, 990, 340);

        jTabbedPane2.addTab("home", mnHome);

        mnPanel.add(jTabbedPane2);
        jTabbedPane2.setBounds(0, 0, 1000, 600);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1000, 600));
        setMinimumSize(new java.awt.Dimension(1000, 600));
        setPreferredSize(new java.awt.Dimension(1000, 600));
        setResizable(false);
        setSize(new java.awt.Dimension(1000, 600));
        getContentPane().setLayout(null);

        pnLoaddingscreen.setLayout(null);

        scLoaddingscreen.setBackground(new java.awt.Color(255, 204, 102));
        pnLoaddingscreen.add(scLoaddingscreen);
        scLoaddingscreen.setBounds(370, 470, 280, 24);

        imgLS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/agm/resources/Frame 1 (1).png"))); // NOI18N
        imgLS.setText("jLabel1");
        imgLS.setMaximumSize(new java.awt.Dimension(1000, 600));
        imgLS.setMinimumSize(new java.awt.Dimension(1000, 600));
        imgLS.setPreferredSize(new java.awt.Dimension(1000, 600));
        imgLS.setRequestFocusEnabled(false);
        pnLoaddingscreen.add(imgLS);
        imgLS.setBounds(0, 0, 1000, 600);

        getContentPane().add(pnLoaddingscreen);
        pnLoaddingscreen.setBounds(0, 0, 0, 0);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void initializeLayout() {
        cardLayout = new java.awt.CardLayout();
        getContentPane().setLayout(cardLayout);

        // Add panels with unique identifiers
        getContentPane().add(loginPanel, "LoginScreen");
        getContentPane().add(mnPanel, "MainScreen");
        getContentPane().add(pnLoaddingscreen, "LoadingScreen");

        // Start with the loading screen
        loadScreen("LoadingScreen");
    }
    private void startProgress() {
        javax.swing.SwingWorker<Void, Integer> worker = new javax.swing.SwingWorker<>() {
            @Override
            protected Void doInBackground() throws Exception {
                for (int i = 0; i <= 100; i++) {
                    Thread.sleep(30); // Simulated delay for progress bar
                    publish(i); // Publish progress
                }
                return null;
            }

            @Override
            protected void process(java.util.List<Integer> chunks) {
                int progress = chunks.get(chunks.size() - 1);
                scLoaddingscreen.setValue(progress);
            }

            @Override
            protected void done() {
                loadScreen("LoginScreen"); // Switch to login screen
            }
        };
        worker.execute(); // Start the worker thread
    }
    
    private void loadScreen(String screenName) {
        cardLayout.show(getContentPane(), screenName);
    }
    
    private void lgusernametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lgusernametxtActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:
        // Get the username and password input


    }//GEN-LAST:event_lgusernametxtActionPerformed
     
    private void lgpasswordtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lgpasswordtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lgpasswordtxtActionPerformed

    private void lgbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lgbuttonActionPerformed
        // TODO add your handling code here:
        String username = lgusernametxt.getText();
        String password = new String(lgpasswordtxt.getPassword());

        // Check if username is empty  
        if (username.isEmpty()) {
            lgUsernamError.setText("Please enter your username");
        }
        // Check if password is empty
        else if(password.isEmpty()){
            lgPasswordError.setText("Please enter your password.");
        }
         
        //Check if username and password are incorrect
        else if (!username.equals("p")) {
            lgUsernamError.setText("Username incorrect");
        } 
        
        //check if password is incorrect
        else if (!password.equals("z")) {
            lgPasswordError.setText("password incorrect.");
        } 
           
        // If credentials are correct, proceed to load the main screen
        else {
            lgUsernamError.setText(""); // Clear any previous error messages
            lgPasswordError.setText(""); // Clear any previous error messages

            loadScreen("MainScreen"); // Load the main screen
        }
    }//GEN-LAST:event_lgbuttonActionPerformed

    private void mnSizetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnSizetxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnSizetxtActionPerformed

    private void mnFormattxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnFormattxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnFormattxtActionPerformed

    private void mnContacttxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnContacttxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnContacttxtActionPerformed

    private void mnDatetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnDatetxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnDatetxtActionPerformed

    private void mnIDtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnIDtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnIDtxtActionPerformed
    private boolean validateField(JTextField textField, JLabel errorLbl, String errorMsg, Color errorColor, Color successColor, boolean isValidFormat) {
    if (validationUtil.isNullOrEmpty(textField.getText())) {
        textField.setBorder(createNormalBorder(errorColor));  // Changed to use createNormalBorder
        errorLbl.setText("Field cannot be empty!");
        errorLbl.setVisible(true);
        return false;
    } else if (!isValidFormat) {
        //textField.setBorder(createTitledBorder(errorColor, fieldName)); // Removed the titled border line
        textField.setBorder(createNormalBorder(errorColor));  // Changed to use createNormalBorder
        errorLbl.setText(errorMsg);
        errorLbl.setVisible(true);
        return false;
    } else {
        textField.setBorder(createNormalBorder(successColor));  // Changed to use createNormalBorder
        errorLbl.setVisible(false);
        return true;
    }
}

    
//        private javax.swing.border.TitledBorder createTitledBorder(Color color, String title) {
//        return javax.swing.BorderFactory.createTitledBorder(
//                javax.swing.BorderFactory.createLineBorder(color, 2),
//                title,
//                javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,
//                javax.swing.border.TitledBorder.DEFAULT_POSITION,
//                new java.awt.Font("Segoe UI", 1, 12),
//                color
//        );
//    }
    private javax.swing.border.Border createNormalBorder(Color color) {
    return javax.swing.BorderFactory.createLineBorder(color, 2);
    }

    private void showDialogBox(String message, String title, int messageType) {
        JOptionPane.showMessageDialog(this, message, title, messageType);
    }


    private void mnAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnAddButtonActionPerformed
    // TODO add your handling code here:
    boolean hasError = true;

    // Validate Name
    hasError &= validateField(
            mnNametxt, nameError, "must be in alphabets.",
            errorColor, yellowColor, validationUtil.ValidName(mnNametxt.getText())
    );
    // Validate ID
    hasError &= validateField(
            mnIDtxt,  idError, "must be 4 digits.",
            errorColor, yellowColor, validationUtil.isValidId(mnIDtxt.getText())
    );
    // Validate Date
    hasError &= validateField(
            mnDatetxt,  dateError, "Enter the correct format.",
            errorColor, yellowColor, validationUtil.isValidDate(mnDatetxt.getText())
    );
    // Validate contact
    hasError &= validateField(
            mnContacttxt,  contactError, "Must start from 98 and be 10 digits.",
            errorColor, yellowColor, validationUtil.ValidContact(mnContacttxt.getText())
    );
    // Validate price
    hasError &= validateField(
            mnPricetxt,  priceError, "must be in digits.",
            errorColor, yellowColor, validationUtil.ValidPrice(mnPricetxt.getText())
    );
    // Validate address
    hasError &= validateField(
            mnStudioAddresstxt,  addressError, "must be in alphabets.",
            errorColor, yellowColor, validationUtil.ValidAddress(mnStudioAddresstxt.getText())
    );
    // Validate size
    hasError &= validateField(
            mnSizetxt,  sizeError, "must be in height X width form.",
            errorColor, yellowColor, validationUtil.ValidSize(mnSizetxt.getText())
    );

    // If no errors, collect data for adding to table
    if (hasError) {
        // Prepare data for the table
        // Retrieve values from combo boxes
        // Use these values in your logic
        paintingInfo items = new paintingInfo(
            Integer.parseInt(mnIDtxt.getText().trim()),
            mnNametxt.getText().trim(),
            mnDatetxt.getText().trim(),
            mnMeduimtxt.getSelectedItem().toString().trim(),
            mnContacttxt.getText().trim(),
            Integer.parseInt(mnPricetxt.getText().trim()),
            mnStudioAddresstxt.getText().trim(),
            mnFormattxt.getSelectedItem().toString().trim(),
            mnSizetxt.getText().trim()
        );

        if (checkDuplicateStudent(items)) {
            // Add the student if no duplicate is found
            mnIDtxt.setBorder(createNormalBorder(errorColor));  // Changed to use createNormalBorder
            idError.setText("Duplicate ID");
        } else {
            artItemList.add(items);
            loadListToTable(artItemList);
            mnIDtxt.setBorder(createNormalBorder(greenColor));  // Changed to use createNormalBorder
            mnNametxt.setText("");
            mnIDtxt.setText("");
            mnDatetxt.setText("");
            mnContacttxt.setText("");
            mnPricetxt.setText("");
            mnStudioAddresstxt.setText("");
            mnSizetxt.setText("");
            mnMeduimtxt.setSelectedIndex(0);
            mnFormattxt.setSelectedIndex(0);
            showDialogBox("Art Item added.", "task successful", JOptionPane.INFORMATION_MESSAGE);
        }
    }    


    }//GEN-LAST:event_mnAddButtonActionPerformed
    private void loadListToTable(List<paintingInfo> itemsList) {
        DefaultTableModel model = (DefaultTableModel) mntable.getModel();

        // Clear existing rows if needed
        model.setRowCount(0);

        // Populate the table with student data
        itemsList.forEach(item -> model.addRow(new Object[]{
              item.getArtId(), item.getName(), item.getDate(), item.getMedium(), item.getContact(), item.getPrice()
              , item.getSize(), item.getFormatt(), item.getAddress()
        }));
    }
    
    private boolean checkDuplicateStudent(paintingInfo item) {
        return artItemList.stream()
                .anyMatch(existingArtItem
                        -> existingArtItem.getArtId() == item.getArtId());
    }

    private void mnNametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnNametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnNametxtActionPerformed

    private void mnUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnUpdateButtonActionPerformed
        
            // TODO add your handling code here:
        boolean hasError = true;

        // Validate Name
        hasError &= validateField(
                mnNametxt, nameError, "must be in alphabets.",
                errorColor, yellowColor, validationUtil.ValidName(mnNametxt.getText())
        );
        // Validate ID
        hasError &= validateField(
                mnIDtxt,  idError, "must be 4 digits.",
                errorColor, yellowColor, validationUtil.isValidId(mnIDtxt.getText())
        );
        // Validate Date
        hasError &= validateField(
                mnDatetxt,  dateError, "Enter the correct format.",
                errorColor, yellowColor, validationUtil.isValidDate(mnDatetxt.getText())
        );
        // Validate contact
        hasError &= validateField(
                mnContacttxt,  contactError, "Must start from 98 and be 10 digits.",
                errorColor, yellowColor, validationUtil.ValidContact(mnContacttxt.getText())
        );
        // Validate price
        hasError &= validateField(
                mnPricetxt,  priceError, "must be in digits.",
                errorColor, yellowColor, validationUtil.ValidPrice(mnPricetxt.getText())
        );
        // Validate address
        hasError &= validateField(
                mnStudioAddresstxt,  addressError, "must be in alphabets.",
                errorColor, yellowColor, validationUtil.ValidAddress(mnStudioAddresstxt.getText())
        );
        // Validate size
        hasError &= validateField(
                mnSizetxt,  sizeError, "must be in height X width form.",
                errorColor, yellowColor, validationUtil.ValidSize(mnSizetxt.getText())
        );
        // add to table is no errors
        if(hasError){
            paintingInfo updatedItem = new paintingInfo(
            Integer.parseInt(mnIDtxt.getText().trim()), // Updated ID
            mnNametxt.getText().trim(),                 // Updated Name
            mnDatetxt.getText().trim(),                 // Updated Date
            mnMeduimtxt.getSelectedItem().toString().trim(), // Updated Medium
            mnContacttxt.getText().trim(),              // Updated Contact
            Integer.parseInt(mnPricetxt.getText().trim()), // Updated Price
            mnStudioAddresstxt.getText().trim(),       // Updated Address
            mnFormattxt.getSelectedItem().toString().trim(), // Updated Format
            mnSizetxt.getText().trim()                 // Updated Size
        );

//        // Try to find and update the existing item in the list
//        boolean isUpdated = artItemList.stream()
//            .filter(existingItem -> existingItem.getArtId() == updatedItem.getArtId()) // Find matching ID
//            .peek(existingItem -> {
//                // Update the item in the list
//                artItemList.set(artItemList.indexOf(existingItem), updatedItem);
//            })
//            .findFirst() // Stop after the first match
//            .isPresent(); // Check if any match was found and updated

        // If the item was updated, show a success message
        if (checkDuplicateStudent(updatedItem)) {
            loadListToTable(artItemList);  // Refresh the table with the updated list
            showDialogBox("Art Item updated.", "Task successful", JOptionPane.INFORMATION_MESSAGE);
            resetFormFields();  // Reset the form fields after successful update
        } else {
            // If no item was updated (ID not found), show an error message
            showDialogBox("Art Item with this ID not found.", "Error", JOptionPane.ERROR_MESSAGE);
        }
     }

    }//GEN-LAST:event_mnUpdateButtonActionPerformed

    private void mnDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnDeleteButtonActionPerformed
        // TODO add your handling code here:
          // Get the value from the ID text field
    String idText = mnIDtxt.getText().trim();

    // Use the existing method to check if the field is empty
    if (validationUtil.isNullOrEmpty(idText)) {
        validateField(
                mnIDtxt,idError, "enter ID.",
                errorColor, yellowColor, validationUtil.isValidId(idText)
        );
        return; // Exit early if the ID field is empty
    }

    try {
        // Parse the ID text to an integer
        int idToDelete = Integer.parseInt(idText);

        // Check if any item matches the ID and remove it
        boolean isDeleted = artItemList.removeIf(item -> item.getArtId() == idToDelete);

        if (isDeleted) {
            // Reload the table with updated data
            loadListToTable(artItemList);
            JOptionPane.showMessageDialog(this, "Item deleted successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "ID not found.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Invalid ID. Please enter a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_mnDeleteButtonActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        resetFormFields();
    }//GEN-LAST:event_clearActionPerformed

    private void mnPricetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnPricetxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnPricetxtActionPerformed

    private void mnLogoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnLogoutButtonActionPerformed
        // TODO add your handling code here:
        lgusernametxt.setText("");
        lgpasswordtxt.setText("");
        loadScreen("LoginScreen"); // Load the main screen
    }//GEN-LAST:event_mnLogoutButtonActionPerformed

    private void mnStudioAddresstxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnStudioAddresstxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnStudioAddresstxtActionPerformed

    private void mnMeduimtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnMeduimtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnMeduimtxtActionPerformed
    
    private void resetFormFields() {
    // Reset the form fields after successful update
    mnNametxt.setText("");
    mnIDtxt.setText("");
    mnDatetxt.setText("");
    mnContacttxt.setText("");
    mnPricetxt.setText("");
    mnStudioAddresstxt.setText("");
    mnSizetxt.setText("");
    mnMeduimtxt.setSelectedIndex(0);
    mnFormattxt.setSelectedIndex(0);
}


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AGM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AGM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AGM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AGM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AGM().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressError;
    private javax.swing.JButton clear;
    private javax.swing.JLabel contactError;
    private javax.swing.JLabel dateError;
    private javax.swing.JLabel idError;
    private javax.swing.JLabel imgLS;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lgImg;
    private javax.swing.JLabel lgPassword;
    private javax.swing.JLabel lgPasswordError;
    private javax.swing.JLabel lgUsernamError;
    private javax.swing.JLabel lgUsername;
    private javax.swing.JButton lgbutton;
    private javax.swing.JPasswordField lgpasswordtxt;
    private javax.swing.JTextField lgusernametxt;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JPanel mnAboutus;
    private javax.swing.JButton mnAddButton;
    private javax.swing.JTextField mnContacttxt;
    private javax.swing.JTextField mnDatetxt;
    private javax.swing.JButton mnDeleteButton;
    private javax.swing.JComboBox<String> mnFormattxt;
    private javax.swing.JPanel mnGallery;
    private javax.swing.JPanel mnHome;
    private javax.swing.JTextField mnIDtxt;
    private javax.swing.JButton mnLogoutButton;
    private javax.swing.JComboBox<String> mnMeduimtxt;
    private javax.swing.JTextField mnNametxt;
    private javax.swing.JPanel mnPanel;
    private javax.swing.JTextField mnPricetxt;
    private javax.swing.JTextField mnSizetxt;
    private javax.swing.JTextField mnStudioAddresstxt;
    private javax.swing.JButton mnUpdateButton;
    private javax.swing.JPanel mnaadmin;
    private javax.swing.JTable mntable;
    private javax.swing.JLabel nameError;
    private javax.swing.JPanel pnLoaddingscreen;
    private javax.swing.JLabel priceError;
    private javax.swing.JProgressBar scLoaddingscreen;
    private javax.swing.JLabel sizeError;
    // End of variables declaration//GEN-END:variables
}
