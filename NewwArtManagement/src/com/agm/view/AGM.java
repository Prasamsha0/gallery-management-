/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.agm.view;
import com.agm.model.paintingInfo;
import com.amg.util.validationUtil;
import java.awt.Color;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import com.agm.controller.algorithms.sort;
import com.agm.controller.algorithms.insertionSort;
import com.agm.controller.algorithms.mergeSort;
import java.util.ArrayList;

/**
 *
 * @Prasamsha Singh 
 *  
 */
public class AGM extends javax.swing.JFrame {
    private List<paintingInfo> artItemList;
    private java.awt.CardLayout cardLayout;
    private final validationUtil validationUtil;
    private final Color redColor = new Color(255, 51, 0);
    private final Color greenColour = new Color(35, 101, 51);
    private final sort selectionSort;
    private final insertionSort insertionSort;
    private final mergeSort MergeSort;
    

    /**
     * Creates new form AGM
     */
    public AGM() {
        initComponents();
        validationUtil = new validationUtil();
        initializeLayout(); // Set up CardLayout and add screens
        initializeData(); // Initialize student data and table
        startProgress(); 
        selectionSort = new sort();
        insertionSort = new insertionSort();
        MergeSort = new mergeSort();
        // Set up CardLayout and add screens
       // initializeData(); // Initialize student data and table
        //startProgress();
    }
    
    //Already existing values in the tables
     private void initializeData() {
        artItemList = new LinkedList<>();
        // Registering sample students
        registerArtwork(new paintingInfo(1238, "Prakriti Mali", "23/03/2024", "Watercolor", "9841489349", 53000, "Narnia Studio","Paper", "100 X 100"));
        registerArtwork(new paintingInfo(1980, "Prasamsha Singh", "27/01/2024", "Acrylic", "9860997123", 100004, "Chitra Studio","Cloth", "1000 X 600"));
        registerArtwork(new paintingInfo(1745, "Prasamsha Singh", "27/01/2024", "Acrylic", "9860997123", 100004, "Chitra Studio","Cloth", "1000 X 600"));
        registerArtwork(new paintingInfo(1128, "Prasamsha Singh", "27/01/2024", "Acrylic", "9860997123", 100004, "Chitra Studio","Cloth", "1000 X 600"));
        registerArtwork(new paintingInfo(2367, "Prasamsha Singh", "27/01/2024", "Acrylic", "9860997123", 100004, "Chitra Studio","Cloth", "1000 X 600"));
        registerArtwork(new paintingInfo(1893, "Prasamsha Singh", "27/01/2024", "Acrylic", "9860997123", 100004, "Chitra Studio","Cloth", "1000 X 600"));   
    }
     
    private void registerArtwork(paintingInfo items) {
        artItemList.add(items);
        DefaultTableModel model = (DefaultTableModel) mntable.getModel();
        model.addRow(new Object[]{
            items.getArtId(), items.getName(), items.getDate(), items.getMedium(), items.getContact(), items.getPrice(),items.getAddress(),   items.getFormatt()
           ,items.getSize()
        });
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loginPanel = new javax.swing.JPanel();
        lgusernametxt = new javax.swing.JTextField();
        lgUsernamError = new javax.swing.JLabel();
        lgPasswordError = new javax.swing.JLabel();
        lgpasswordtxt = new javax.swing.JPasswordField();
        lgbutton = new javax.swing.JButton();
        lgImg = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        mnPanel = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        mnHome = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        mnAddArt = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        sizeError = new javax.swing.JLabel();
        mnSizetxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        mnFormattxt = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        mnMeduimtxt = new javax.swing.JComboBox<>();
        contactError = new javax.swing.JLabel();
        mnContacttxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        nameError = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        mnStudioAddresstxt = new javax.swing.JTextField();
        addressError = new javax.swing.JLabel();
        mnPricetxt = new javax.swing.JTextField();
        priceError = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        dateError = new javax.swing.JLabel();
        mnDatetxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        mnNametxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        mnIDtxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        idError = new javax.swing.JLabel();
        mnUpdateButton = new javax.swing.JButton();
        mnAddButton = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        mnDeleteButton = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        mnFeatured = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        mnAboutus = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        mnGallery = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        mnmainTableScroll = new javax.swing.JScrollPane();
        mntable = new javax.swing.JTable();
        mnSortButton = new javax.swing.JComboBox<>();
        mnSearchtxt = new javax.swing.JTextField();
        mnSortIdButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        mnDecendingButton = new javax.swing.JRadioButton();
        mnAscendingButton = new javax.swing.JRadioButton();
        pnLoaddingscreen = new javax.swing.JPanel();
        scLoaddingscreen = new javax.swing.JProgressBar();
        imgLS = new javax.swing.JLabel();

        loginPanel.setBackground(new java.awt.Color(247, 247, 249));
        loginPanel.setMaximumSize(new java.awt.Dimension(1200, 700));
        loginPanel.setMinimumSize(new java.awt.Dimension(1200, 700));
        loginPanel.setPreferredSize(new java.awt.Dimension(1200, 700));
        loginPanel.setLayout(null);

        lgusernametxt.setBackground(java.awt.SystemColor.controlHighlight);
        lgusernametxt.setText("p");
        lgusernametxt.setBorder(null);
        lgusernametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lgusernametxtActionPerformed(evt);
            }
        });
        loginPanel.add(lgusernametxt);
        lgusernametxt.setBounds(870, 320, 240, 50);
        loginPanel.add(lgUsernamError);
        lgUsernamError.setBounds(870, 380, 240, 20);
        loginPanel.add(lgPasswordError);
        lgPasswordError.setBounds(870, 470, 240, 20);

        lgpasswordtxt.setBackground(java.awt.SystemColor.controlHighlight);
        lgpasswordtxt.setText("z");
        lgpasswordtxt.setBorder(null);
        lgpasswordtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lgpasswordtxtActionPerformed(evt);
            }
        });
        loginPanel.add(lgpasswordtxt);
        lgpasswordtxt.setBounds(870, 410, 240, 50);

        lgbutton.setBackground(new java.awt.Color(2, 17, 37));
        lgbutton.setForeground(new java.awt.Color(255, 255, 255));
        lgbutton.setText("login");
        lgbutton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lgbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lgbuttonActionPerformed(evt);
            }
        });
        loginPanel.add(lgbutton);
        lgbutton.setBounds(940, 500, 110, 40);

        lgImg.setBackground(new java.awt.Color(255, 255, 255));
        lgImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/agm/resources/Untitled design 1.png"))); // NOI18N
        lgImg.setMaximumSize(new java.awt.Dimension(1000, 600));
        lgImg.setMinimumSize(new java.awt.Dimension(1000, 600));
        lgImg.setPreferredSize(new java.awt.Dimension(1000, 600));
        loginPanel.add(lgImg);
        lgImg.setBounds(0, -10, 800, 720);

        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/agm/resources/person_13924070 1.png"))); // NOI18N
        loginPanel.add(jLabel26);
        jLabel26.setBounds(930, 140, 70, 56);

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/agm/resources/Ellipse 1.png"))); // NOI18N
        loginPanel.add(jLabel25);
        jLabel25.setBounds(910, 120, 130, 110);

        jLabel27.setBackground(new java.awt.Color(255, 255, 255));
        jLabel27.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel27.setText("Welcome, Prasamsha");
        loginPanel.add(jLabel27);
        jLabel27.setBounds(870, 270, 250, 32);

        mnPanel.setBackground(new java.awt.Color(255, 255, 255));
        mnPanel.setMaximumSize(new java.awt.Dimension(1200, 700));
        mnPanel.setMinimumSize(new java.awt.Dimension(1200, 700));
        mnPanel.setPreferredSize(new java.awt.Dimension(1200, 700));
        mnPanel.setLayout(null);

        jTabbedPane2.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane2.setDoubleBuffered(true);
        jTabbedPane2.setMaximumSize(new java.awt.Dimension(1000, 600));
        jTabbedPane2.setMinimumSize(new java.awt.Dimension(1000, 600));
        jTabbedPane2.setPreferredSize(new java.awt.Dimension(1000, 600));

        mnHome.setBackground(new java.awt.Color(247, 247, 249));
        mnHome.setMaximumSize(new java.awt.Dimension(1000, 500));
        mnHome.setMinimumSize(new java.awt.Dimension(1000, 500));
        mnHome.setPreferredSize(new java.awt.Dimension(1000, 500));
        mnHome.setLayout(null);

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setMaximumSize(new java.awt.Dimension(1200, 1300));
        jScrollPane3.setMinimumSize(new java.awt.Dimension(1200, 700));
        jScrollPane3.setPreferredSize(new java.awt.Dimension(1200, 700));

        jPanel3.setBackground(new java.awt.Color(247, 247, 249));
        jPanel3.setMinimumSize(new java.awt.Dimension(1200, 700));
        jPanel3.setPreferredSize(new java.awt.Dimension(1200, 1300));
        jPanel3.setLayout(null);

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/agm/resources/home screen.png"))); // NOI18N
        jPanel3.add(jLabel16);
        jLabel16.setBounds(10, 180, 532, 450);

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/agm/resources/DSC_6186 1.png"))); // NOI18N
        jPanel3.add(jLabel13);
        jLabel13.setBounds(28, 999, 304, 219);

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/agm/resources/Pagoda 1.png"))); // NOI18N
        jPanel3.add(jLabel15);
        jLabel15.setBounds(397, 999, 307, 219);

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/agm/resources/Willian Santiago 1.png"))); // NOI18N
        jPanel3.add(jLabel20);
        jLabel20.setBounds(796, 999, 306, 219);

        jLabel22.setFont(new java.awt.Font("Sitka Banner", 0, 48)); // NOI18N
        jLabel22.setText("Admin Panel");
        jPanel3.add(jLabel22);
        jLabel22.setBounds(29, 90, 234, 61);

        jLabel30.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        jLabel30.setText("Traditional Art");
        jPanel3.add(jLabel30);
        jLabel30.setBounds(28, 928, 100, 20);

        jLabel31.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        jLabel31.setText("Modern Art");
        jPanel3.add(jLabel31);
        jLabel31.setBounds(796, 928, 79, 20);

        jLabel32.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        jLabel32.setText("Abstract Art");
        jPanel3.add(jLabel32);
        jLabel32.setBounds(405, 928, 82, 20);

        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/agm/resources/Line 1.png"))); // NOI18N
        jPanel3.add(jLabel33);
        jLabel33.setBounds(28, 966, 304, 27);

        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/agm/resources/Line 1.png"))); // NOI18N
        jPanel3.add(jLabel34);
        jLabel34.setBounds(796, 966, 306, 27);

        jLabel35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/agm/resources/Line 1.png"))); // NOI18N
        jPanel3.add(jLabel35);
        jLabel35.setBounds(405, 966, 299, 27);

        jLabel29.setFont(new java.awt.Font("Sitka Display", 0, 15)); // NOI18N
        jLabel29.setText("<html><p>This admin Panel is designed to help or manage </p><p>       the art works effectively and efficiently.  With  </p> <p> functions like add update and delete, you can  </p><p> easily manage the paintings with ease.</p></html>");

        jLabel21.setFont(new java.awt.Font("Sitka Banner", 0, 48)); // NOI18N
        jLabel21.setText("Mandala Art Point");

        jLabel28.setFont(new java.awt.Font("Sitka Banner", 0, 48)); // NOI18N
        jLabel28.setText("Welcome to");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(119, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel21)))
                .addGap(47, 47, 47))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel28)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel21)
                .addGap(39, 39, 39)
                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        jPanel3.add(jPanel4);
        jPanel4.setBounds(540, 180, 660, 450);

        jScrollPane3.setViewportView(jPanel3);

        mnHome.add(jScrollPane3);
        jScrollPane3.setBounds(0, 0, 1200, 700);

        jTabbedPane2.addTab("home", mnHome);

        mnAddArt.setBackground(new java.awt.Color(193, 227, 254));
        mnAddArt.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(159, 210, 250));
        jPanel2.setMinimumSize(new java.awt.Dimension(702, 452));
        jPanel2.setPreferredSize(new java.awt.Dimension(702, 452));

        mnSizetxt.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        mnSizetxt.setText("12 X 123");
        mnSizetxt.setBorder(null);
        mnSizetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnSizetxtActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        jLabel8.setText("Size");

        mnFormattxt.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        mnFormattxt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Paper", "Cloth", "Glass" }));
        mnFormattxt.setBorder(null);
        mnFormattxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnFormattxtActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        jLabel5.setText("Format");

        jLabel9.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        jLabel9.setText("Meduim");

        mnMeduimtxt.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        mnMeduimtxt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Acrylic", "Watercolor", "Oil", "Charcoal" }));
        mnMeduimtxt.setToolTipText("");
        mnMeduimtxt.setBorder(null);
        mnMeduimtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnMeduimtxtActionPerformed(evt);
            }
        });

        mnContacttxt.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        mnContacttxt.setText("9812345678");
        mnContacttxt.setBorder(null);
        mnContacttxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnContacttxtActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        jLabel4.setText("Contact");

        nameError.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N

        jLabel7.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        jLabel7.setText("Address");

        mnStudioAddresstxt.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        mnStudioAddresstxt.setText("bale");
        mnStudioAddresstxt.setBorder(null);
        mnStudioAddresstxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnStudioAddresstxtActionPerformed(evt);
            }
        });

        mnPricetxt.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        mnPricetxt.setText("13445");
        mnPricetxt.setBorder(null);
        mnPricetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnPricetxtActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        jLabel3.setText("Price");

        dateError.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N

        mnDatetxt.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        mnDatetxt.setText("dd/mm/yyyy");
        mnDatetxt.setBorder(null);
        mnDatetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnDatetxtActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        jLabel6.setText("Date");

        mnNametxt.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        mnNametxt.setText("afgg");
        mnNametxt.setBorder(null);
        mnNametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnNametxtActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        jLabel10.setText("Name");

        mnIDtxt.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        mnIDtxt.setText("1111");
        mnIDtxt.setBorder(null);
        mnIDtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnIDtxtActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        jLabel1.setText("art ID");

        idError.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(116, 116, 116))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(mnSizetxt)
                                .addGap(35, 35, 35)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mnFormattxt, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mnMeduimtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(mnPricetxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mnIDtxt)
                            .addComponent(idError, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sizeError, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                            .addComponent(priceError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(mnStudioAddresstxt, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                                    .addComponent(addressError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mnContacttxt)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(contactError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mnNametxt)
                                    .addComponent(nameError, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mnDatetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dateError, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mnNametxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(mnDatetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(mnIDtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mnContacttxt, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mnStudioAddresstxt, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mnPricetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addressError, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(contactError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(priceError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(71, 71, 71)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(mnFormattxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(mnMeduimtxt)
                                .addGap(3, 3, 3)))
                        .addGap(87, 87, 87))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mnSizetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sizeError, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63))))
        );

        mnAddArt.add(jPanel2);
        jPanel2.setBounds(480, 80, 702, 452);

        mnUpdateButton.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        mnUpdateButton.setText("Update");
        mnUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnUpdateButtonActionPerformed(evt);
            }
        });
        mnAddArt.add(mnUpdateButton);
        mnUpdateButton.setBounds(800, 540, 110, 30);

        mnAddButton.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        mnAddButton.setText("Add");
        mnAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnAddButtonActionPerformed(evt);
            }
        });
        mnAddArt.add(mnAddButton);
        mnAddButton.setBounds(680, 540, 100, 30);

        clear.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        clear.setText("clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        mnAddArt.add(clear);
        clear.setBounds(1050, 540, 110, 30);

        mnDeleteButton.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        mnDeleteButton.setText("delete");
        mnDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnDeleteButtonActionPerformed(evt);
            }
        });
        mnAddArt.add(mnDeleteButton);
        mnDeleteButton.setBounds(920, 540, 120, 30);

        jLabel19.setFont(new java.awt.Font("SansSerif", 1, 48)); // NOI18N
        jLabel19.setText("Add Artwork");
        mnAddArt.add(jLabel19);
        jLabel19.setBounds(710, 10, 370, 62);

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/agm/resources/Designer_working_with_pen_display_Illustration-removebg-preview 1.png"))); // NOI18N
        jLabel18.setText("jLabel18");
        mnAddArt.add(jLabel18);
        jLabel18.setBounds(3, 0, 460, 670);

        jTabbedPane2.addTab("add art ", mnAddArt);

        mnFeatured.setBackground(new java.awt.Color(255, 255, 255));
        mnFeatured.setMaximumSize(new java.awt.Dimension(1000, 600));
        mnFeatured.setMinimumSize(new java.awt.Dimension(1000, 600));
        mnFeatured.setPreferredSize(new java.awt.Dimension(1000, 600));
        mnFeatured.setLayout(null);

        jLabel2.setBackground(new java.awt.Color(15, 255, 255));
        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 48)); // NOI18N
        jLabel2.setText("<html><p>Featured </p><p>Artworks</p> <html>");
        mnFeatured.add(jLabel2);
        jLabel2.setBounds(50, 30, 260, 140);

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/agm/resources/img 5.jpg"))); // NOI18N
        jLabel17.setText("jLabel17");
        mnFeatured.add(jLabel17);
        jLabel17.setBounds(20, 190, 390, 310);

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/agm/resources/img 1.jpg"))); // NOI18N
        jLabel11.setText("jLabel11");
        mnFeatured.add(jLabel11);
        jLabel11.setBounds(620, 400, 340, 160);

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/agm/resources/img 2.jpg"))); // NOI18N
        mnFeatured.add(jLabel14);
        jLabel14.setBounds(460, 70, 560, 270);

        jTabbedPane2.addTab("featured", mnFeatured);

        mnAboutus.setBackground(new java.awt.Color(255, 255, 255));
        mnAboutus.setFocusTraversalPolicyProvider(true);
        mnAboutus.setLayout(null);

        jLabel23.setBackground(new java.awt.Color(0, 0, 0));
        jLabel23.setFont(new java.awt.Font("SansSerif", 1, 48)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("About US");
        mnAboutus.add(jLabel23);
        jLabel23.setBounds(490, 210, 300, 70);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jLabel24.setBackground(new java.awt.Color(0, 0, 0));
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("<html><p>Established in the 1950s, Mandala Art Gallery is one of the </p><p>oldest and most renowned art galleries in Nepal. Located in </p><p>the heart of Kathmandu, the gallery has been a hub for art </p><p>enthusiasts, offering a unique blend of traditional and </p><p>contemporary artworks. With a special focus on the intricate </p><p>and mesmerizing Mandala art, the gallery has become a </p><p>symbol of Nepal's rich artistic heritage. Through the years, </p><p>Mandala Art Gallery has continued to showcase exceptional </p><p>works that celebrate the cultural and spiritual essence of </p><p>Nepal, making it a must-visit destination for art lovers from </p><p>around the world.</p><html>");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(61, Short.MAX_VALUE)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        mnAboutus.add(jPanel1);
        jPanel1.setBounds(440, 210, 410, 310);

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/agm/resources/Resurrecting an Ancient Fabric More Precious Than Silk That Hasn't Been Spun for Centuries 1.png"))); // NOI18N
        mnAboutus.add(jLabel12);
        jLabel12.setBounds(64, 76, 443, 303);

        jTabbedPane2.addTab("about us", mnAboutus);

        mnGallery.setBackground(new java.awt.Color(247, 247, 249));
        mnGallery.setForeground(new java.awt.Color(255, 255, 255));
        mnGallery.setEnabled(false);
        mnGallery.setFocusable(false);
        mnGallery.setMaximumSize(new java.awt.Dimension(1200, 700));
        mnGallery.setMinimumSize(new java.awt.Dimension(1200, 700));
        mnGallery.setPreferredSize(new java.awt.Dimension(1200, 700));
        mnGallery.setLayout(null);

        mntable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ArtID", "Artist Name", "Date", "Meduim", "Contact", "Price", "Studio Address", "Format ", "Size"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        mnmainTableScroll.setViewportView(mntable);

        mnSortButton.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Name", "ID", "Price" }));
        mnSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnSortButtonActionPerformed(evt);
            }
        });

        mnSearchtxt.setText("jTextField1");
        mnSearchtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnSearchtxtActionPerformed(evt);
            }
        });

        mnSortIdButton.setText("sort id ");
        mnSortIdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnSortIdButtonActionPerformed(evt);
            }
        });

        jButton1.setText("sort name");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel36.setText("search");

        mnDecendingButton.setText("highest to lowest");

        mnAscendingButton.setText("lowest to higest ");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(mnmainTableScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 1160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(mnAscendingButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mnDecendingButton, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(96, 96, 96)
                        .addComponent(mnSearchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mnSortIdButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(mnSortButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 23, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(mnAscendingButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(mnSortIdButton)
                    .addComponent(mnSortButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mnSearchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36)
                    .addComponent(mnDecendingButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mnmainTableScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(480, Short.MAX_VALUE))
        );

        mnGallery.add(jPanel5);
        jPanel5.setBounds(0, 0, 1200, 690);

        jTabbedPane2.addTab("items list", mnGallery);

        mnPanel.add(jTabbedPane2);
        jTabbedPane2.setBounds(0, 0, 1200, 700);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1200, 700));
        setResizable(false);
        setSize(new java.awt.Dimension(1200, 700));
        getContentPane().setLayout(null);

        pnLoaddingscreen.setBackground(new java.awt.Color(247, 247, 249));
        pnLoaddingscreen.setLayout(null);

        scLoaddingscreen.setBackground(new java.awt.Color(255, 204, 102));
        pnLoaddingscreen.add(scLoaddingscreen);
        scLoaddingscreen.setBounds(500, 530, 280, 24);

        imgLS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/agm/resources/Frame 1 (11).png"))); // NOI18N
        imgLS.setMaximumSize(new java.awt.Dimension(1000, 600));
        imgLS.setMinimumSize(new java.awt.Dimension(1000, 600));
        imgLS.setPreferredSize(new java.awt.Dimension(1000, 600));
        imgLS.setRequestFocusEnabled(false);
        pnLoaddingscreen.add(imgLS);
        imgLS.setBounds(10, 0, 1200, 700);

        getContentPane().add(pnLoaddingscreen);
        pnLoaddingscreen.setBounds(0, 0, 0, 0);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //initialzing layout to ensure the loading screen apprears first
    private void initializeLayout() {
        cardLayout = new java.awt.CardLayout();
        getContentPane().setLayout(cardLayout);
        // Add panels with unique identifiers
        getContentPane().add(loginPanel, "LoginScreen");
        getContentPane().add(mnPanel, "MainScreen");
        getContentPane().add(pnLoaddingscreen, "LoadingScreen");
        // Start with the loading screen
        loadScreen("LoadingScreen");
    }
    

    
    //makes the scroll bar load
    private void startProgress() {
        javax.swing.SwingWorker<Void, Integer> worker = new javax.swing.SwingWorker<>() {
            @Override
            protected Void doInBackground() throws Exception {
                for (int i = 0; i <= 100; i++) {
                    Thread.sleep(30); // Simulated delay for progress bar
                    publish(i); // Publish progress
                }
                return null;
            }

            @Override
            protected void process(java.util.List<Integer> chunks) {
                int progress = chunks.get(chunks.size() - 1);
                scLoaddingscreen.setValue(progress);
            }

            @Override
            protected void done() {
                loadScreen("LoginScreen"); // Switch to login screen
            }
        };
        worker.execute(); // Start the worker thread
    }
    
    private void loadScreen(String screenName) {
        cardLayout.show(getContentPane(), screenName);
    }
    
    private void lgusernametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lgusernametxtActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:
        // Get the username and password input
    }//GEN-LAST:event_lgusernametxtActionPerformed
     
    private void lgpasswordtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lgpasswordtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lgpasswordtxtActionPerformed

    private void lgbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lgbuttonActionPerformed
        // TODO add your handling code here:
        String username = lgusernametxt.getText();
        String password = new String(lgpasswordtxt.getPassword());

        // incase username is empty  
        if (username.isEmpty()) {
            lgUsernamError.setText("Please enter your username");
        }
        // incase password is empty
        else if(password.isEmpty()){
            lgPasswordError.setText("Please enter your password.");
        }
         
        //incase  username and password are incorrect
        else if (!username.equals("p")) {
            lgUsernamError.setText("Username incorrect");
        } 
        
        //check if password is incorrect
        else if (!password.equals("z")) {
            lgPasswordError.setText("password incorrect.");
        } 
           
        // proceeds to main screen if the criteria is met
        else {
            lgUsernamError.setText(""); // Clear any previous error messages
            lgPasswordError.setText(""); // Clear any previous error messages

            loadScreen("MainScreen"); // Load the main screen
        }
    }//GEN-LAST:event_lgbuttonActionPerformed
    private boolean validateArtwork(JTextField txtField, JLabel errorLbl, String errorMsg, Color redColor, Color successColor, boolean isValidFormat) {
    if (validationUtil.isNullOrEmpty(txtField.getText())) {
        txtField.setBorder(createBorder(redColor));  // Changed to use createBorder
        errorLbl.setText("Field cannot be empty!");
        errorLbl.setVisible(true);
        return false;
    } else if (!isValidFormat) {
        txtField.setBorder(createBorder(redColor));  // Changed to use createBorder
        errorLbl.setText(errorMsg);
        errorLbl.setVisible(true);
        return false;
    } else {
        txtField.setBorder(createBorder(successColor));  // Changed to use createBorder
        errorLbl.setVisible(false);
        return true;
    }
}

    
    private javax.swing.border.Border createBorder(Color color) {
    return javax.swing.BorderFactory.createLineBorder(color, 2);
    }

    private void showDialogBox(String message, String title, int messageType) {
        JOptionPane.showMessageDialog(this, message, title, messageType);
    }


    private void mnAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnAddButtonActionPerformed
    // TODO add your handling code here:
    boolean noError = true;

    // Validate Name
    noError &= validateArtwork(
            mnNametxt, nameError, "must be in alphabets.",
            redColor, greenColour, validationUtil.ValidName(mnNametxt.getText())
    );
    // Validate ID
    noError &= validateArtwork(
            mnIDtxt,  idError, "must be 4 digits.",
            redColor, greenColour, validationUtil.isValidId(mnIDtxt.getText())
    );
    // Validate Date
    noError &= validateArtwork(
            mnDatetxt,  dateError, "Enter the correct format.",
            redColor, greenColour, validationUtil.isValidDate(mnDatetxt.getText())
    );
    // Validate contact
    noError &= validateArtwork(
            mnContacttxt,  contactError, "Must start from 98 and be 10 digits.",
            redColor, greenColour, validationUtil.ValidContact(mnContacttxt.getText())
    );
    // Validate price
    noError &= validateArtwork(
            mnPricetxt,  priceError, "must be in digits.",
            redColor, greenColour, validationUtil.ValidPrice(mnPricetxt.getText())
    );
    // Validate address
    noError &= validateArtwork(
            mnStudioAddresstxt,  addressError, "must be in alphabets.",
            redColor, greenColour, validationUtil.ValidAddress(mnStudioAddresstxt.getText())
    );
    // Validate size
    noError &= validateArtwork(
            mnSizetxt,  sizeError, "must be in height X width form.",
            redColor, greenColour, validationUtil.ValidSize(mnSizetxt.getText())
    );

    // If no errors, collect data for adding to table
    if (noError) {
        // Prepare data for the table
        // Retrieve values from combo boxes
        // Use these values in your logic
        paintingInfo items = new paintingInfo(
            Integer.parseInt(mnIDtxt.getText().trim()),
            mnNametxt.getText().trim(),
            mnDatetxt.getText().trim(),
            mnMeduimtxt.getSelectedItem().toString().trim(),
            mnContacttxt.getText().trim(),
            Integer.parseInt(mnPricetxt.getText().trim()),
            mnStudioAddresstxt.getText().trim(),
            mnFormattxt.getSelectedItem().toString().trim(),
            mnSizetxt.getText().trim()
        );

        if (checkDuplicateID(items)) {
            // Add the student if no duplicate is found
            mnIDtxt.setBorder(createBorder(redColor));  // Changed to use createBorder
            idError.setText("Duplicate ID");
        } else {
            artItemList.add(items);
            addArtwork(artItemList);
            mnIDtxt.setBorder(createBorder(greenColour));  // Changed to use createBorder
            mnNametxt.setText("");
            mnIDtxt.setText("");
            mnDatetxt.setText("");
            mnContacttxt.setText("");
            mnPricetxt.setText("");
            mnStudioAddresstxt.setText("");
            mnSizetxt.setText("");
            mnMeduimtxt.setSelectedIndex(0);
            mnFormattxt.setSelectedIndex(0);
            showDialogBox("Art Item added.", "task successful", JOptionPane.INFORMATION_MESSAGE);
        }
    }    


    }//GEN-LAST:event_mnAddButtonActionPerformed
    
    //adds items to table
    private void addArtwork(List<paintingInfo> itemsList) {
        DefaultTableModel model = (DefaultTableModel) mntable.getModel();

        // Clear existing rows if needed
        model.setRowCount(0);

        // Populate the table with student data
        itemsList.forEach(item -> model.addRow(new Object[]{
              item.getArtId(), item.getName(), item.getDate(), item.getMedium(), item.getContact(), item.getPrice()
              , item.getAddress(), item.getFormatt(), item.getSize()
        }));
    }
    
    private boolean checkDuplicateID(paintingInfo item) {
        return artItemList.stream()
                .anyMatch(existingArtItem
                        -> existingArtItem.getArtId() == item.getArtId());
    }

    private boolean updateArtwork(paintingInfo updatedItem) {
    for (int i = 0; i < artItemList.size(); i++) {
        if (artItemList.get(i).getArtId() == updatedItem.getArtId()) {
            artItemList.set(i, updatedItem); // Update the existing item
            return true;
        }
    }
    return false; // No matching ID found
}

    private void mnUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnUpdateButtonActionPerformed
        
            // TODO add your handling code here:
        boolean noError = true;

        // Validate Name
        noError &= validateArtwork(
                mnNametxt, nameError, "must be in alphabets.",
                redColor, greenColour, validationUtil.ValidName(mnNametxt.getText())
        );
        // Validate ID
        noError &= validateArtwork(
                mnIDtxt,  idError, "must be 4 digits.",
                redColor, greenColour, validationUtil.isValidId(mnIDtxt.getText())
        );
        // Validate Date
        noError &= validateArtwork(
                mnDatetxt,  dateError, "Enter the correct format.",
                redColor, greenColour, validationUtil.isValidDate(mnDatetxt.getText())
        );
        // Validate contact
        noError &= validateArtwork(
                mnContacttxt,  contactError, "Must start from 98 and be 10 digits.",
                redColor, greenColour, validationUtil.ValidContact(mnContacttxt.getText())
        );
        // Validate price
        noError &= validateArtwork(
                mnPricetxt,  priceError, "must be in digits.",
                redColor, greenColour, validationUtil.ValidPrice(mnPricetxt.getText())
        );
        // Validate address
        noError &= validateArtwork(
                mnStudioAddresstxt,  addressError, "must be in alphabets.",
                redColor, greenColour, validationUtil.ValidAddress(mnStudioAddresstxt.getText())
        );
        // Validate size
        noError &= validateArtwork(
                mnSizetxt,  sizeError, "must be in height X width form.",
                redColor, greenColour, validationUtil.ValidSize(mnSizetxt.getText())
        );
        // add to table is no errors
        if(noError){
            paintingInfo updatedItem = new paintingInfo(
            Integer.parseInt(mnIDtxt.getText().trim()), // Updated ID
            mnNametxt.getText().trim(),                 // Updated Name
            mnDatetxt.getText().trim(),                 // Updated Date
            mnMeduimtxt.getSelectedItem().toString().trim(), // Updated Medium
            mnContacttxt.getText().trim(),              // Updated Contact
            Integer.parseInt(mnPricetxt.getText().trim()), // Updated Price
            mnStudioAddresstxt.getText().trim(),       // Updated Address
            mnFormattxt.getSelectedItem().toString().trim(), // Updated Format
            mnSizetxt.getText().trim()                 // Updated Size
        );


        // If the item was updated, show a success message
            if (updateArtwork(updatedItem)) {
            addArtwork(artItemList);  // Refresh the table
            showDialogBox("Art Item updated successfully.", "Task successful", JOptionPane.INFORMATION_MESSAGE);
            resetFormFields(); 
                }
            else {
            // If no item was updated (ID not found), show an error message
            showDialogBox("Art Item with this ID not found.", "Error", JOptionPane.ERROR_MESSAGE);
        }
     }

    }//GEN-LAST:event_mnUpdateButtonActionPerformed


    private void mnDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnDeleteButtonActionPerformed
    // Get the value from the ID text field
    String idText = mnIDtxt.getText().trim();

    if (validationUtil.isNullOrEmpty(idText)) {
        validateArtwork(
                mnIDtxt, idError, "Enter ID.",
                redColor, greenColour, validationUtil.isValidId(idText)
        );
        return;
    }

    try {
        int idToDelete = Integer.parseInt(idText);

        // Use removeIf for safe removal
        boolean isDeleted = artItemList.removeIf(item -> item.getArtId() == idToDelete);

        if (isDeleted) {
            addArtwork(artItemList); // Reload the table with updated data
            JOptionPane.showMessageDialog(this, "Item deleted successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "ID not found.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Invalid ID. Please enter a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);   
}
    }//GEN-LAST:event_mnDeleteButtonActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        resetFormFields();
    }//GEN-LAST:event_clearActionPerformed

    private void mnIDtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnIDtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnIDtxtActionPerformed

    private void mnNametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnNametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnNametxtActionPerformed

    private void mnDatetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnDatetxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnDatetxtActionPerformed

    private void mnPricetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnPricetxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnPricetxtActionPerformed

    private void mnStudioAddresstxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnStudioAddresstxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnStudioAddresstxtActionPerformed

    private void mnContacttxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnContacttxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnContacttxtActionPerformed

    private void mnMeduimtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnMeduimtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnMeduimtxtActionPerformed

    private void mnFormattxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnFormattxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnFormattxtActionPerformed

    private void mnSizetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnSizetxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnSizetxtActionPerformed

    private void mnSearchtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnSearchtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnSearchtxtActionPerformed

    private void mnSortIdButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnSortIdButtonActionPerformed
        // TODO add your handling code here:
        List<paintingInfo> sortedList = selectionSort.sortById(artItemList, false);
        addArtwork(sortedList);
    }//GEN-LAST:event_mnSortIdButtonActionPerformed
    
    private void updateTable(List<paintingInfo> sortedList) {
    DefaultTableModel model = (DefaultTableModel) mntable.getModel();
    model.setRowCount(0); // Clear the table
    for (paintingInfo art : sortedList) {
        model.addRow(new Object[]{art.getArtId(), art.getName(), art.getDate(), art.getMedium(), art.getContact(), art.getPrice(),art.getAddress(),   art.getFormatt()
           ,art.getSize()});
    }
    }
    
    
    private void mnSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnSortButtonActionPerformed
        // TODO add your handling code here:
            // Get the selected option from the ComboBox (assuming it's called sortComboBox)
    String selectedSortOption = (String) mnSortButton.getSelectedItem();


    // Check the selected option and perform sorting accordingly
    if ("Name".equals(selectedSortOption)) 
    {
        List<paintingInfo> sortedList = insertionSort.sortByName(artItemList, false); 
        // Assuming addArtwork is a method to display or update the artwork list
        addArtwork(sortedList);  // Update the UI with the sorted list
    }
    
    else if ("ID".equals(selectedSortOption)) 
    {
        // TODO add your handling code here:
        List<paintingInfo> sortedList = selectionSort.sortById(artItemList, false);
        addArtwork(sortedList);
    }
    
    else if ("Price".equals(selectedSortOption))
    {
        List<paintingInfo> sortedList = MergeSort.sort(artItemList);
        addArtwork(sortedList);
    }//GEN-LAST:event_mnSortButtonActionPerformed
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        List<paintingInfo> sortedList = insertionSort.sortByName(artItemList, false); 
        // Assuming addArtwork is a method to display or update the artwork list
        addArtwork(sortedList);  // Update the UI with the sorted list
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void resetFormFields() {
    // Reset the form fields after successful update
    mnNametxt.setText("");
    mnIDtxt.setText("");
    mnDatetxt.setText("");
    mnContacttxt.setText("");
    mnPricetxt.setText("");
    mnStudioAddresstxt.setText("");
    mnSizetxt.setText("");
    mnMeduimtxt.setSelectedIndex(0);
    mnFormattxt.setSelectedIndex(0);
}





    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AGM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AGM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AGM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AGM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AGM().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressError;
    private javax.swing.JButton clear;
    private javax.swing.JLabel contactError;
    private javax.swing.JLabel dateError;
    private javax.swing.JLabel idError;
    private javax.swing.JLabel imgLS;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel lgImg;
    private javax.swing.JLabel lgPasswordError;
    private javax.swing.JLabel lgUsernamError;
    private javax.swing.JButton lgbutton;
    private javax.swing.JPasswordField lgpasswordtxt;
    private javax.swing.JTextField lgusernametxt;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JPanel mnAboutus;
    private javax.swing.JPanel mnAddArt;
    private javax.swing.JButton mnAddButton;
    private javax.swing.JRadioButton mnAscendingButton;
    private javax.swing.JTextField mnContacttxt;
    private javax.swing.JTextField mnDatetxt;
    private javax.swing.JRadioButton mnDecendingButton;
    private javax.swing.JButton mnDeleteButton;
    private javax.swing.JPanel mnFeatured;
    private javax.swing.JComboBox<String> mnFormattxt;
    private javax.swing.JPanel mnGallery;
    private javax.swing.JPanel mnHome;
    private javax.swing.JTextField mnIDtxt;
    private javax.swing.JComboBox<String> mnMeduimtxt;
    private javax.swing.JTextField mnNametxt;
    private javax.swing.JPanel mnPanel;
    private javax.swing.JTextField mnPricetxt;
    private javax.swing.JTextField mnSearchtxt;
    private javax.swing.JTextField mnSizetxt;
    private javax.swing.JComboBox<String> mnSortButton;
    private javax.swing.JButton mnSortIdButton;
    private javax.swing.JTextField mnStudioAddresstxt;
    private javax.swing.JButton mnUpdateButton;
    private javax.swing.JScrollPane mnmainTableScroll;
    private javax.swing.JTable mntable;
    private javax.swing.JLabel nameError;
    private javax.swing.JPanel pnLoaddingscreen;
    private javax.swing.JLabel priceError;
    private javax.swing.JProgressBar scLoaddingscreen;
    private javax.swing.JLabel sizeError;
    // End of variables declaration//GEN-END:variables
}
